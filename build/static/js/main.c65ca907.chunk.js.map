{"version":3,"sources":["redux/actions/actionsTypes.js","redux/reducer.js","redux/sagas.js","redux/actions/actions.js","components/header/index.js","components/header/header.js","components/spinner/index.js","components/spinner/spinner.js","components/pictureBlock/index.js","components/pictureBlock/pictureBlock.js","components/pages/mainPage/index.js","components/pages/mainPage/mainPage.js","components/pages/historyPage/index.js","components/pages/historyPage/historyPage.js","components/ErrorBoundary/index.js","components/ErrorBoundary/ErrorBoundary.js","components/app/index.js","components/app/app.js","index.js"],"names":["addImgToHistory","delImgFromHistory","setError","setLoading","initialState","imgs","loading","isError","reducer","state","action","console","log","type","newImgArray","payload","newDelImgArray","splice","length","fetchImg","watchFetchData","put","call","fetch","data","json","url","image_url","date","Date","toLocaleString","id","Math","random","toFixed","title","err","takeEvery","Header","className","to","Spinner","PictureBlock","img","infoBlock","withInfo","src","alt","MainPage","connect","dispatch","props","useEffect","content","onClick","HistoryPage","index","useState","hasMore","setHasMore","scrolledTimes","setScrolledTimes","shownImgs","slice","dataLength","next","map","ErrorBoundary","children","App","path","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c65ca907.chunk.js","sourcesContent":["export const refreshImg = \"REFRESH_IMG\";\r\nexport const addImgToHistory = \"ADD_IMG_TO_HISTORY\";\r\nexport const delImgFromHistory = \"DELETE_IMG_FROM_HISTORY\";\r\nexport const setError = \"SET_ERROR\";\r\nexport const setLoading = \"SET_LOADING\";\r\nexport const fetchImg = \"FETCH_IMG\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {addImgToHistory, \r\n        delImgFromHistory,\r\n        setError,\r\n        setLoading,\r\n    } from \"./actions/actionsTypes\"\r\n\r\nlet initialState = {\r\n    imgs: [],\r\n    loading: true,\r\n    isError: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log(action.type);\r\n    switch (action.type){\r\n\r\n        case addImgToHistory: \r\n            let newImgArray = [action.payload, ...state.imgs];\r\n            console.log(newImgArray);\r\n            return {\r\n                ...state,\r\n                imgs: newImgArray,\r\n                loading: false \r\n            }\r\n\r\n        case delImgFromHistory:\r\n            let newDelImgArray =[...state.imgs];\r\n            newDelImgArray.splice(action.payload, 1);\r\n            return {\r\n                ...state,\r\n                imgs: newDelImgArray,\r\n                loading: newDelImgArray.length ? false : true\r\n            }  \r\n\r\n        case setError:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isError: true\r\n            }\r\n        \r\n        case setLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                isError: false\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { setLoading } from './actions/actions';\r\n\r\nexport function* fetchImg(){\r\n    try{\r\n        yield put(setLoading());\r\n        let data = yield call(() => fetch('https://api.giphy.com/v1/gifs/random?api_key=gR30u9O8KPOanwIQupHbD90d4k57EOeY'));\r\n        data = yield call(() => data.json());\r\n        yield put({type: \"ADD_IMG_TO_HISTORY\", payload: {\r\n                                                            url: data.data.image_url,\r\n                                                            date: new Date().toLocaleString(),\r\n                                                            id: data.data.id + (Math.random().toFixed(5)*100000),\r\n                                                            title: data.data.title\r\n                                                        }});\r\n        \r\n    } catch(err){\r\n         yield put({type: \"SET_ERROR\", err})\r\n    }\r\n}\r\n\r\nexport function* watchFetchData() {\r\n    yield takeEvery('FETCH_IMG', fetchImg)\r\n  }","\r\n\r\nexport const addImgToHistory = () => {\r\n    return {\r\n        type: \"ADD_IMG_TO_HISTORY\",\r\n    }\r\n}\r\n\r\nexport const fetchImg = () => {\r\n    return { type: 'FETCH_IMG' }\r\n}\r\n\r\nexport const delImgFromHistory = (index) => {\r\n    return {\r\n        type: \"DELETE_IMG_FROM_HISTORY\",\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const setError = () => {\r\n    return {\r\n        type: \"SET_ERROR\"\r\n    }\r\n}\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: \"SET_LOADING\"\r\n    }\r\n}","import Header from './header';\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <div>\r\n                <Link to=\"/\">Main</Link>\r\n                <Link to=\"/history\">History</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (<div className='spinner__container'>  \r\n                <div className=\"loadingio-spinner-spinner-hv9vq4k6slj\"><div className=\"ldio-zcrwtigbkw\">\r\n                <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                </div></div>\r\n            </div>)\r\n}\r\n\r\nexport default Spinner;\r\n\r\n\r\n","import PictureBlock from './pictureBlock';\r\nexport default PictureBlock;","import React from 'react';\r\nimport './pictureBlock.css';\r\n\r\n\r\nconst PictureBlock = ({img, withInfo}) => {\r\n\r\n    let infoBlock = withInfo ? (<div className='info'>\r\n                                    <div>Title: {img.title || \"no data\"}</div>\r\n                                    <div>Loaded:{img.date}</div>\r\n                                </div>) : null;\r\n\r\n    return (\r\n        <div>\r\n            { infoBlock }\r\n            <div className='picture'>\r\n                <img src={img.url} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PictureBlock;","import MainPage from './mainPage';\r\nexport default MainPage;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchImg } from \"../../../redux/actions/actions\";\r\n\r\nimport Spinner from '../../spinner';\r\nimport PictureBlock from '../../pictureBlock';\r\nimport '../Page.css';\r\n\r\n\r\nconst MainPage = (props) => {\r\n\r\n    useEffect(() => {\r\n        if(props.loading){\r\n            props.fetchImg();\r\n        }\r\n    }, []);\r\n\r\n\r\n    let content = props.loading ? (<Spinner />) : (<PictureBlock img = {props.img}/>)  \r\n    // console.log(props)\r\n\r\n    return (\r\n            <div className=\"container\">\r\n                <div className=\"wrapper\">\r\n                    { content }\r\n                </div>\r\n                \r\n                <button onClick = { () => props.fetchImg()}>Refresh</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        img: state.imgs[0],\r\n        loading: state.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchImg: () => dispatch(fetchImg())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","import HistoryPage from './historyPage';\r\nexport default HistoryPage;","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { delImgFromHistory } from '../../../redux/actions/actions';\r\nimport '../Page.css';\r\nimport PictureBlock from '../../pictureBlock';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst HistoryPage = ({imgs, delImgFromHistory}) => {\r\n\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [scrolledTimes, setScrolledTimes] = useState(1);\r\n\r\n    const shownImgs = imgs.slice(0, scrolledTimes * 5);\r\n\r\n    if(!imgs.length){\r\n        return (\r\n            <div className='container'>\r\n                <div>History is empty, please return to main page.</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const addMoreImgs = () => {\r\n        if( shownImgs.length === imgs.length) {\r\n            setHasMore(false);\r\n            return;\r\n        }\r\n        setScrolledTimes(scrolledTimes + 1);\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <InfiniteScroll\r\n                dataLength={ shownImgs.length }\r\n                hasMore={ hasMore }\r\n                next={ addMoreImgs }\r\n            >\r\n            { shownImgs.map((img, index) => {\r\n                return (\r\n                    <div className='img__container' key={ img.id }>\r\n                        <PictureBlock withInfo img = { img }/>\r\n                        <button onClick = { () => delImgFromHistory(index) }>Delete</button>\r\n                    </div>\r\n                )\r\n                \r\n            })}\r\n            </InfiniteScroll>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        imgs: state.imgs,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        delImgFromHistory: (index) => dispatch(delImgFromHistory(index))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryPage);\r\n","import ErrorBoundary from './ErrorBoundary';\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ErrorBoundary = (props) => {\r\n    if(props.isError){\r\n        return <div>Something went wrong...</div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.children}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isError: state.isError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ErrorBoundary)","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport Header from '../header/';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'; \r\nimport MainPage from '../pages/mainPage';\r\nimport HistoryPage from '../pages/historyPage';\r\nimport ErrorBoundary from \"../ErrorBoundary\"\r\n\r\n\r\nconst App = () => {\r\n    return  (\r\n\r\n        <Router>\r\n                <Header/>\r\n                <Switch>\r\n                    \r\n                    <Route path=\"/history\" >\r\n                        <HistoryPage/>\r\n                    </Route> \r\n                    <Route path=\"/\" >\r\n                        <ErrorBoundary>\r\n                            <MainPage/>\r\n                        </ErrorBoundary>\r\n                    </Route>\r\n                </Switch>\r\n        </Router>\r\n            \r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from './redux/reducer';\r\nimport { watchFetchData } from './redux/sagas';\r\n\r\nimport App from './components/app/';\r\nimport './index.css';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(watchFetchData);\r\n\r\nReactDOM.render(\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}